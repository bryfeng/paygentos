"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/customers/page",{

/***/ "(app-pages-browser)/./src/utils/supabase.ts":
/*!*******************************!*\
  !*** ./src/utils/supabase.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createClient: () => (/* binding */ createClient),\n/* harmony export */   safeQuery: () => (/* binding */ safeQuery),\n/* harmony export */   supabase: () => (/* binding */ supabase),\n/* harmony export */   testConnection: () => (/* binding */ testConnection)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\n// Get environment variables\nconst supabaseUrl = \"https://kjcvqvwocgabjyikznbh.supabase.co\" || 0;\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImtqY3ZxdndvY2dhYmp5aWt6bmJoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDI2OTY4NzAsImV4cCI6MjA1ODI3Mjg3MH0.r1ky_zBRa6iiT4r8zE0OwmsaUNdduyPCIo7EjE_4zzY\" || 0;\n// Check if environment variables are set\nif (!supabaseUrl || !supabaseAnonKey) {\n    console.warn('Missing Supabase environment variables. Database functionality may be limited.');\n}\n// Create supabase client\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey);\n// Export a function to create a new client (useful in API routes)\nfunction createClient() {\n    return (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey);\n}\n// Error handling wrapper for Supabase queries\nasync function safeQuery(queryFn) {\n    try {\n        const result = await queryFn();\n        return {\n            data: result,\n            error: null\n        };\n    } catch (error) {\n        console.error('Database query error:', error);\n        return {\n            data: null,\n            error\n        };\n    }\n}\n// Test connection\nasync function testConnection() {\n    try {\n        const { data, error } = await supabase.from('health_check').select('*').limit(1);\n        if (error) throw error;\n        return {\n            connected: true,\n            message: 'Successfully connected to Supabase'\n        };\n    } catch (error) {\n        console.error('Supabase connection test failed:', error);\n        return {\n            connected: false,\n            message: 'Failed to connect to Supabase',\n            error\n        };\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy91dGlscy9zdXBhYmFzZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE2RTtBQUU3RSw0QkFBNEI7QUFDNUIsTUFBTUUsY0FBY0MsMENBQW9DLElBQUksQ0FBRTtBQUM5RCxNQUFNRyxrQkFBa0JILGtOQUF5QyxJQUFJLENBQUU7QUFFdkUseUNBQXlDO0FBQ3pDLElBQUksQ0FBQ0QsZUFBZSxDQUFDSSxpQkFBaUI7SUFDcENFLFFBQVFDLElBQUksQ0FBQztBQUNmO0FBRUEseUJBQXlCO0FBQ2xCLE1BQU1DLFdBQVdULG1FQUFvQkEsQ0FBQ0MsYUFBYUksaUJBQWlCO0FBRTNFLGtFQUFrRTtBQUMzRCxTQUFTTjtJQUNkLE9BQU9DLG1FQUFvQkEsQ0FBQ0MsYUFBYUk7QUFDM0M7QUFFQSw4Q0FBOEM7QUFDdkMsZUFBZUssVUFBYUMsT0FBeUI7SUFDMUQsSUFBSTtRQUNGLE1BQU1DLFNBQVMsTUFBTUQ7UUFDckIsT0FBTztZQUFFRSxNQUFNRDtZQUFRRSxPQUFPO1FBQUs7SUFDckMsRUFBRSxPQUFPQSxPQUFPO1FBQ2RQLFFBQVFPLEtBQUssQ0FBQyx5QkFBeUJBO1FBQ3ZDLE9BQU87WUFBRUQsTUFBTTtZQUFNQztRQUFNO0lBQzdCO0FBQ0Y7QUFFQSxrQkFBa0I7QUFDWCxlQUFlQztJQUNwQixJQUFJO1FBQ0YsTUFBTSxFQUFFRixJQUFJLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1MLFNBQVNPLElBQUksQ0FBQyxnQkFBZ0JDLE1BQU0sQ0FBQyxLQUFLQyxLQUFLLENBQUM7UUFDOUUsSUFBSUosT0FBTyxNQUFNQTtRQUNqQixPQUFPO1lBQUVLLFdBQVc7WUFBTUMsU0FBUztRQUFxQztJQUMxRSxFQUFFLE9BQU9OLE9BQU87UUFDZFAsUUFBUU8sS0FBSyxDQUFDLG9DQUFvQ0E7UUFDbEQsT0FBTztZQUFFSyxXQUFXO1lBQU9DLFNBQVM7WUFBaUNOO1FBQU07SUFDN0U7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL2JyeWFuZmVuZy9wYXltZW50LWFnZW50LXBsYXRmb3JtL3NyYy91dGlscy9zdXBhYmFzZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDbGllbnQgYXMgY3JlYXRlU3VwYWJhc2VDbGllbnQgfSBmcm9tICdAc3VwYWJhc2Uvc3VwYWJhc2UtanMnO1xuXG4vLyBHZXQgZW52aXJvbm1lbnQgdmFyaWFibGVzXG5jb25zdCBzdXBhYmFzZVVybCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCB8fCAnJztcbmNvbnN0IHN1cGFiYXNlQW5vbktleSA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZIHx8ICcnO1xuXG4vLyBDaGVjayBpZiBlbnZpcm9ubWVudCB2YXJpYWJsZXMgYXJlIHNldFxuaWYgKCFzdXBhYmFzZVVybCB8fCAhc3VwYWJhc2VBbm9uS2V5KSB7XG4gIGNvbnNvbGUud2FybignTWlzc2luZyBTdXBhYmFzZSBlbnZpcm9ubWVudCB2YXJpYWJsZXMuIERhdGFiYXNlIGZ1bmN0aW9uYWxpdHkgbWF5IGJlIGxpbWl0ZWQuJyk7XG59XG5cbi8vIENyZWF0ZSBzdXBhYmFzZSBjbGllbnRcbmV4cG9ydCBjb25zdCBzdXBhYmFzZSA9IGNyZWF0ZVN1cGFiYXNlQ2xpZW50KHN1cGFiYXNlVXJsLCBzdXBhYmFzZUFub25LZXkpO1xuXG4vLyBFeHBvcnQgYSBmdW5jdGlvbiB0byBjcmVhdGUgYSBuZXcgY2xpZW50ICh1c2VmdWwgaW4gQVBJIHJvdXRlcylcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDbGllbnQoKSB7XG4gIHJldHVybiBjcmVhdGVTdXBhYmFzZUNsaWVudChzdXBhYmFzZVVybCwgc3VwYWJhc2VBbm9uS2V5KTtcbn1cblxuLy8gRXJyb3IgaGFuZGxpbmcgd3JhcHBlciBmb3IgU3VwYWJhc2UgcXVlcmllc1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNhZmVRdWVyeTxUPihxdWVyeUZuOiAoKSA9PiBQcm9taXNlPFQ+KTogUHJvbWlzZTx7IGRhdGE6IFQgfCBudWxsOyBlcnJvcjogYW55IH0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBxdWVyeUZuKCk7XG4gICAgcmV0dXJuIHsgZGF0YTogcmVzdWx0LCBlcnJvcjogbnVsbCB9O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0RhdGFiYXNlIHF1ZXJ5IGVycm9yOicsIGVycm9yKTtcbiAgICByZXR1cm4geyBkYXRhOiBudWxsLCBlcnJvciB9O1xuICB9XG59XG5cbi8vIFRlc3QgY29ubmVjdGlvblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHRlc3RDb25uZWN0aW9uKCkge1xuICB0cnkge1xuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlLmZyb20oJ2hlYWx0aF9jaGVjaycpLnNlbGVjdCgnKicpLmxpbWl0KDEpO1xuICAgIGlmIChlcnJvcikgdGhyb3cgZXJyb3I7XG4gICAgcmV0dXJuIHsgY29ubmVjdGVkOiB0cnVlLCBtZXNzYWdlOiAnU3VjY2Vzc2Z1bGx5IGNvbm5lY3RlZCB0byBTdXBhYmFzZScgfTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdTdXBhYmFzZSBjb25uZWN0aW9uIHRlc3QgZmFpbGVkOicsIGVycm9yKTtcbiAgICByZXR1cm4geyBjb25uZWN0ZWQ6IGZhbHNlLCBtZXNzYWdlOiAnRmFpbGVkIHRvIGNvbm5lY3QgdG8gU3VwYWJhc2UnLCBlcnJvciB9O1xuICB9XG59XG4iXSwibmFtZXMiOlsiY3JlYXRlQ2xpZW50IiwiY3JlYXRlU3VwYWJhc2VDbGllbnQiLCJzdXBhYmFzZVVybCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJzdXBhYmFzZUFub25LZXkiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSIsImNvbnNvbGUiLCJ3YXJuIiwic3VwYWJhc2UiLCJzYWZlUXVlcnkiLCJxdWVyeUZuIiwicmVzdWx0IiwiZGF0YSIsImVycm9yIiwidGVzdENvbm5lY3Rpb24iLCJmcm9tIiwic2VsZWN0IiwibGltaXQiLCJjb25uZWN0ZWQiLCJtZXNzYWdlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/supabase.ts\n"));

/***/ })

});