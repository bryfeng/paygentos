"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/customers/new/page",{

/***/ "(app-pages-browser)/./src/models/customer/customer.ts":
/*!*****************************************!*\
  !*** ./src/models/customer/customer.ts ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ContactType: () => (/* binding */ ContactType),\n/* harmony export */   IdDocumentType: () => (/* binding */ IdDocumentType),\n/* harmony export */   defaultCustomer: () => (/* binding */ defaultCustomer),\n/* harmony export */   getContactByType: () => (/* binding */ getContactByType),\n/* harmony export */   getFullName: () => (/* binding */ getFullName),\n/* harmony export */   getPrimaryContact: () => (/* binding */ getPrimaryContact),\n/* harmony export */   validateCustomer: () => (/* binding */ validateCustomer)\n/* harmony export */ });\n// Contact type enum\nvar ContactType = /*#__PURE__*/ function(ContactType) {\n    ContactType[\"EMAIL\"] = \"email\";\n    ContactType[\"PHONE\"] = \"phone\";\n    ContactType[\"TELEGRAM\"] = \"telegram\";\n    ContactType[\"SLACK\"] = \"slack\";\n    ContactType[\"DISCORD\"] = \"discord\";\n    ContactType[\"WHATSAPP\"] = \"whatsapp\";\n    ContactType[\"SIGNAL\"] = \"signal\";\n    ContactType[\"OTHER\"] = \"other\";\n    return ContactType;\n}({});\n// ID document type enum\nvar IdDocumentType = /*#__PURE__*/ function(IdDocumentType) {\n    IdDocumentType[\"PASSPORT\"] = \"passport\";\n    IdDocumentType[\"DRIVERS_LICENSE\"] = \"drivers_license\";\n    IdDocumentType[\"NATIONAL_ID\"] = \"national_id\";\n    IdDocumentType[\"RESIDENCE_PERMIT\"] = \"residence_permit\";\n    IdDocumentType[\"SOCIAL_SECURITY\"] = \"social_security\";\n    IdDocumentType[\"TAX_ID\"] = \"tax_id\";\n    IdDocumentType[\"OTHER\"] = \"other\";\n    return IdDocumentType;\n}({});\n// Default values for new customer\nconst defaultCustomer = {\n    contacts: [],\n    preferredContactType: \"email\",\n    idDocuments: [],\n    isActive: true,\n    createdAt: new Date(),\n    updatedAt: new Date()\n};\n// Customer validation\nconst validateCustomer = (customer)=>{\n    const errors = [];\n    if (!customer.firstName) {\n        errors.push('First name is required');\n    }\n    if (!customer.lastName) {\n        errors.push('Last name is required');\n    }\n    // Validate the direct email field first (new approach)\n    if (!customer.email) {\n        errors.push('Email address is required');\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(customer.email)) {\n        errors.push('Email format is invalid');\n    }\n    // For backwards compatibility, check contacts if needed\n    if (!customer.contacts || customer.contacts.length === 0) {\n        // This is ok if we have a direct email field\n        if (!customer.email) {\n            errors.push('At least one contact method is required');\n        }\n    } else {\n        // Validate that the primary contact information is properly formatted if present\n        const primaryContact = customer.contacts.find((c)=>c.isPrimary);\n        if (primaryContact && primaryContact.type === \"email\" && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(primaryContact.value)) {\n            errors.push('Primary email format is invalid');\n        }\n    }\n    // Validate date of birth if provided\n    if (customer.dob) {\n        const dobDate = new Date(customer.dob);\n        const today = new Date();\n        if (isNaN(dobDate.getTime())) {\n            errors.push('Date of birth is invalid');\n        } else if (dobDate > today) {\n            errors.push('Date of birth cannot be in the future');\n        }\n    }\n    return errors;\n};\n// Utility function to get primary contact\nconst getPrimaryContact = (customer)=>{\n    return customer.contacts.find((contact)=>contact.isPrimary);\n};\n// Utility function to get contact by type\nconst getContactByType = (customer, type)=>{\n    return customer.contacts.find((contact)=>contact.type === type);\n};\n// Utility function to get full name\nconst getFullName = (customer)=>{\n    return customer.fullName || \"\".concat(customer.firstName, \" \").concat(customer.lastName);\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/models/customer/customer.ts\n"));

/***/ })

});